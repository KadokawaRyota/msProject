//------------------------------------------------------------------------------
//          ファイルインクルード
//------------------------------------------------------------------------------
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

//------------------------------------------------------------------------------
//          定義
//------------------------------------------------------------------------------
public enum TOUCH_MODE
{
    NONE,       // タップされていない
    TRIGGER,    // タップされた瞬間
    MOVE,       // タップをキープしている
};

//------------------------------------------------------------------------------
//          メイン
//------------------------------------------------------------------------------
public class Scr_ControllerManager : MonoBehaviour 
{
    //--------------------------------------------------------------------------
    //          変数定義
    //--------------------------------------------------------------------------
    InputManager inputManager;                  // インプットマネージャー
    public Vector3 TouchPositionStart;          // タップ開始位置
    public Vector3 TouchPositionNow;            // 現在のタップ位置
    public Vector3 ControllerVec;               // タップ点の始点から終点へのベクトル
    public float ControllerVecLength;           // ベクトルの長さ
    public float MaxMoveSpeed;                  // 最高速度
    private Vector3 MoveVec;                    // 移動方向  

    public Vector3 CameraMoveLength_Start;      // 始点タップ位置(カメラ移動用)
    public Vector3 CameraMoveLength_End;        // 終点タップ位置(カメラ移動用)
    public float fCameraMoveLength;             // カメラ移動距離(速度？)
    private bool bCameraMoveFlug;               // 回転移動状態フラグ    

    private static TOUCH_MODE TouchMode;        // 現在のタップ状態

    //--------------------------------------------------------------------------
    //          初期化処理
    //--------------------------------------------------------------------------
	void Start () 
    {
        ////       インプットマネージャ生成
        ////////////////////////////////////////////////////////////////////////
        inputManager = InputManager.Instance;

        ////       カメラ回転フラグfalse
        ////////////////////////////////////////////////////////////////////////
        bCameraMoveFlug = false;
        
        ////        初期値設定
        ////////////////////////////////////////////////////////////////////////
        TouchMode = TOUCH_MODE.NONE;    // 現在のタップ状態
    }

    //--------------------------------------------------------------------------
    //          更新処理
    //--------------------------------------------------------------------------
	void Update () 
    {
        ////        タップ状態別の更新処理
        ////////////////////////////////////////////////////////////////////////
        if (InputManager.GetTouchTrigger()) TouchTrigger();                                  // タップされた瞬間
        if (InputManager.GetTouchPress() && !InputManager.GetTouchTrigger()) TouchMove();    // タップをキープしている状態
        if (InputManager.GetTouchRelease()) TouchRelease();                                  // タップを解除した瞬間
    }

    //--------------------------------------------------------------------------
    //          タップされた瞬間(トリガー処理)
    //--------------------------------------------------------------------------    
    public void TouchTrigger()
    {
        ////        タッチ状態の変更
        ////////////////////////////////////////////////////////////////////////
        TouchMode = TOUCH_MODE.TRIGGER;

        ////        タップ位置取得
        ////////////////////////////////////////////////////////////////////////
        TouchPositionStart  = InputManager.GetTouchPosition(0);
        TouchPositionNow    = InputManager.GetTouchPosition(0);

        ////        カメラ回転用変数初期化
        ////////////////////////////////////////////////////////////////////////
        CameraMoveLength_Start = Vector3.zero;
        CameraMoveLength_End   = Vector3.zero; 
    }

    //--------------------------------------------------------------------------
    //          タップされている(ムーブ処理)
    //--------------------------------------------------------------------------
    void TouchMove()
    {
        ////        タッチ状態の変更
        ////////////////////////////////////////////////////////////////////////
        TouchMode = TOUCH_MODE.MOVE;

        ////        現在のタップ位置取得
        ////////////////////////////////////////////////////////////////////////
        TouchPositionNow = InputManager.GetTouchPosition(0);

        ////        始点と終点の方向ベクトル生成
        ////////////////////////////////////////////////////////////////////////
        ControllerVec = (TouchPositionNow - TouchPositionStart);//.normalized;
        ControllerVecLength = ControllerVec.magnitude;

        ////        カメラの回転移動距離算出
        ////////////////////////////////////////////////////////////////////////
        if (Input.touchCount == 2)  // タップされている指の本数が「2本」の場合のみ
        {
            CameraRotateUpdate();
        }
    }

    //--------------------------------------------------------------------------
    //          タップが解除された(リリース処理)
    //--------------------------------------------------------------------------
    void TouchRelease()
    {
        ////        タッチ状態の変更
        ////////////////////////////////////////////////////////////////////////
        TouchMode = TOUCH_MODE.NONE;
        ControllerVec = Vector3.zero;   // new Vector3(0.0f, 0.0f, 0.0f);
        
        ////        カメラ回転用変数初期化
        ////////////////////////////////////////////////////////////////////////
        CameraMoveLength_Start = Vector3.zero;
        CameraMoveLength_End = Vector3.zero; 
        bCameraMoveFlug = false;
    }

    //--------------------------------------------------------------------------
    //          タップ状態の取得
    //--------------------------------------------------------------------------
    public TOUCH_MODE GetTouchMode()
    {
        ////        現在のタッチ状態を返す
        ////////////////////////////////////////////////////////////////////////
        return TouchMode;
    }

    //--------------------------------------------------------------------------
    //          カメラ回転情報の更新処理
    //--------------------------------------------------------------------------
    void CameraRotateUpdate()
    {
        ////    タップ位置の設定
        ////////////////////////////////////////////////////////////////////////
        if (CameraMoveLength_Start.x == 0.0f &&
            CameraMoveLength_Start.y == 0.0f &&
            CameraMoveLength_Start.z == 0.0f)
        {
            CameraMoveLength_Start = Input.GetTouch(1).position;  // 始点位置(初回のみ)
        }

        CameraMoveLength_End = Input.GetTouch(1).position;   // 終点位置

        ////    タップ位置からカメラ移動用の距離を算出
        ////////////////////////////////////////////////////////////////////////
        fCameraMoveLength = CameraMoveLength_End.x - CameraMoveLength_Start.x;
        
        ////    回転移動フラグをTrueに
        ////////////////////////////////////////////////////////////////////////
        bCameraMoveFlug = true;

        ////    デバッグ表示
        ////////////////////////////////////////////////////////////////////////
        Debug.Log("始点：" + CameraMoveLength_Start + "終点：" + CameraMoveLength_End + "長さ：" + fCameraMoveLength);     // カメラ回転情報表示

    }

    //--------------------------------------------------------------------------
    //          カメラ回転情報のゲッター
    //--------------------------------------------------------------------------
    public float GetCameraRotateLength()
    {
        if (bCameraMoveFlug)
            return fCameraMoveLength;

        else
            return 0.0f;
    }
}


